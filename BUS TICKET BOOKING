#include<stdio.h>
#include<stdlib.h>
#include<string.h>

// A structure to store bus information
struct Bus{
    int busNumber;
    char source[50];
    char destination[50];
    int totalSeats;
    int availableSeats;
    float fare;
};

struct User{
    char username[50];
    char password[50];
};

void displayMainMenu(){
    printf("\n=== MAIN MENU  ===\n");
    printf("ENTER -> 1. LOGIN\n");
    printf("ENTER -> 2. EXIT\n");
    printf("Enter your choice : ");
}

void displayUserMenu(){
    printf("\n#=== USER MENU  ===#\n");
    printf("ENTER -> 1. Book a Ticket\n");
    printf("ENTER -> 2. Cancel a Ticket\n");
    printf("ENTER -> 3. Check Bus Status\n");
    printf("ENTER -> 4. Logout\n\n");
    printf("Enter your choice: ");
}

int loginUser(struct User users[], int numUsers, char username[], char password[]){
    for (int i = 0; i < numUsers; i++){
        if (strcmp(users[i].username, username) == 0 && strcmp(users[i].password, password) == 0){
            return i; 
        }
    }
    return -1; 
}

void bookTicket(struct Bus buses[], int numBuses){
    printf("101, Start : Chennai,End : Nellore,    50, 50, 500.0\n");
    printf("102, Start : Kerala ,End : Karanataka, 40, 40, 400.0\n");
    printf("103, Start : Gudur , End : Chennai ,   30, 30, 300.0\n");
    printf("\nEnter Bus Number: ");
    int busNumber;
    scanf("%d", &busNumber);

    int busIndex = -1;
    for (int i = 0; i < numBuses; i++){
        if (buses[i].busNumber == busNumber){
            busIndex = i;
            break;
        }
    }

    if (busIndex == -1){
        printf("Bus with Bus Number %d not found.\n", busNumber);
    }
    else{
        printf("Enter Number of Seats: ");
        int seatsToBook;
        scanf("%d", &seatsToBook);

        if (buses[busIndex].availableSeats < seatsToBook){
            printf("\nSorry, only %d seats are available.\n", buses[busIndex].availableSeats);
        }
        else{
            buses[busIndex].availableSeats -= seatsToBook;
            printf("\nBooking successful! %d seats booked on Bus Number %d.\n", seatsToBook, busNumber);
        }
    }
}

void cancelTicket(struct Bus buses[], int numBuses){
    printf("\nEnter Bus Number: ");
    int busNumber;
    scanf("%d", &busNumber);

    int busIndex = -1;
    for (int i = 0; i < numBuses; i++){
        if (buses[i].busNumber == busNumber){
            busIndex = i;
            break;
        }
    }

    if (busIndex == -1){
        printf("\nBus with Bus Number %d not found.\n", busNumber);
    }
    else{
        printf("Enter Number of Seats to Cancel: ");
        int seatsToCancel;
        scanf("%d", &seatsToCancel);

        if (seatsToCancel > (buses[busIndex].totalSeats - buses[busIndex].availableSeats)){
            printf("\nError: You can't cancel more seats than were booked.\n");
        }
        else{
            buses[busIndex].availableSeats += seatsToCancel;
            printf("\nCancellation successful! %d seats canceled on Bus Number %d.\n", seatsToCancel, busNumber);
        }
    }
}

void checkBusStatus(struct Bus buses[], int numBuses){
    printf("\nEnter Bus Number: ");
    int busNumber;
    scanf("%d", &busNumber);
    
    int busIndex = -1;
    for (int i = 0; i < numBuses; i++){
        if (buses[i].busNumber == busNumber){
            busIndex = i;
            break;
        }
    }

    if (busIndex != -1){
        printf("\nBus Number: %d\n", buses[busIndex].busNumber);
        printf("Source: %s\n", buses[busIndex].source);
        printf("Destination: %s\n", buses[busIndex].destination);
        printf("Total Seats: %d\n", buses[busIndex].totalSeats);
        printf("Available Seats: %d\n", buses[busIndex].availableSeats);
        printf("Fare: %.2f\n", buses[busIndex].fare);
    }
    else{
        printf("\nBus with Bus Number %d not found.\n", busNumber);
    }
}

int main(){
    printf(" ================================\n ");
    printf("|    WELCOME TO BUS TICKET     |\n ");
    printf("|       BOOKING  SYSTEM.       |\n ");
    printf("|                              |\n ");
    printf("|     DESIGNED BY              |\n ");
    printf("|          * YASWANTH          |\n ");
    printf("|          * GOWTHAM           |\n ");
    printf("|          * AKSHAY            |\n ");
    printf("|          * KIRAN             |\n ");
    printf("|          * VINOD             |\n ");
    printf("|                              |\n ");
    printf("================================");
    
    struct User users[1] = {
        {"YASWANTH", "18"},
    };
    int numUsers = 1;  

    struct Bus buses[3] = {
        {101, "Chennai", "Nellore", 50, 50, 500.0},
        {102, "Kerala", "Karnataka", 40, 40, 400.0},
        {103, "Gudur", "Chennai", 30, 30, 300.0},
    };
    int numBuses = 3;

    int loggedInUserId = -1; 

    while (1){
        if (loggedInUserId == -1){
            displayMainMenu();
            int choice;
            scanf("%d", &choice);

            if (choice == 1){
                char username[50];
                char password[50];

                printf("Enter Username: ");
                scanf("%s", username);
                printf("Enter Password: ");
                scanf("%s", password);

                loggedInUserId = loginUser(users, numUsers, username, password);
                if (loggedInUserId == -1){
                    printf("≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈\n ");
                    printf("Login failed. Please check your username and password.\n");
                }
                else{
                    printf("≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈\n ");
                    printf("Login successful. Welcome, %s!\n", username);
                }
            }
            else if (choice == 2){
                printf("\nExiting the program.\n");
                break;
            }
            else{
                printf("\nInvalid choice. Please try again.\n");
            }
        }
        else{
            displayUserMenu();
            int userChoice;
            scanf("%d", &userChoice);

            switch (userChoice){
            case 1:
                bookTicket(buses, numBuses);
                break;
            case 2:
                cancelTicket(buses, numBuses);
                break;
            case 3:
                checkBusStatus(buses, numBuses);
                break;
            case 4:
                printf("\nLogging out.\n");
                loggedInUserId = -1;
                break;
            default:
                printf("\nInvalid choice. Please try again.\n");
            }
        }
    }

    return 0;
}
